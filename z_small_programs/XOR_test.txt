B8 00 28 00 00                ; mov  eax, 0x2800
BB 00 11 22 33                ; mov  ebx, 0x33221100
89 18                         ; mov  [eax], ebx

32 18                         ; xor  bl, [eax]           ; r8,rm8 → BL ^= 0x00 → BL unchanged
30 58 01                      ; xor  [eax+1], bl         ; rm8,r8 → 0x11 ^ BL
B9 FF FF FF FF                ; mov  ecx, 0xFFFFFFFF
31 08                         ; xor  [eax], ecx          ; rm32,r32 → invert dword
33 18                         ; xor  ebx, [eax]          ; r32,rm32 → ebx ^= inverted → dependence chain

89 58 04                      ; mov  [eax+4], ebx
F4
